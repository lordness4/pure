library(data.)
library(data.table)
barrnap_out <- fread("~/Desktop/margot/transposases/sequence_files/virion/predicted_rRNAs_all_virion_contigs.txt")
barrnap_out <- fread("~/Desktop/margot/transposases/sequence_files/virion/predicted_rRNAs_all_virion_contigs.txt")
View(barrnap_out)
# title: analyse blast results
# author: domi
# date: Thu Sep 10 11:50:48 2020
# libraries ---------------------------------------------------------------
library(dplyr)
library(data.table)
library(stringr)
library(seqinr)
library(ggplot2)
# working directory
cwd <- getwd()
setwd(cwd)
# working directory
cwd <- "~/Documents/promotion/labrotation3/margot/"
setwd(cwd)
# working directory
cwd <- "~/Documents/promotion/labrotation3/margot/blast_vs_ncbi_genomes/"
setwd(cwd)
cell_out <- fread("cellular_out.txt")
vir_out <- fread("virion_out.txt")
fwrite(cell_out, "cellular_out.txt")
fwrite(vir_out, "virion_out.txt")
# title: blast results: contigs against prokaryotic genomes
# author: domi
# date: Mon Aug 31 09:57:30 2020
# libraries ---------------------------------------------------------------
library(dplyr)
library(data.table)
library(stringr)
library(ggplot2)
library(taxonomizr)
# working directory
cwd <- "/home/domi/Documents/promotion/labrotation3/margot"
setwd(cwd)
sql_tax_db <- "~/Documents/promotion/dbs/accessionTaxa.sql"
# Q1: Look for "complete" genomes in the virome set. They would have >90% query cov and >90% ANI
# import data -------------------------------------------------------------
blast_columns <- "qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore"
blast_columns <- unlist(str_split(blast_columns, " "))
vir_out <- fread("virion_out.txt")
names(vir_out) <- blast_columns
vir_info <- fread("transposases/sequence_files/virion/all_virion_contigs_info.tsv")
# filter data -------------------------------------------------------------
# add length to blast dt VECTORISED
vir_out$qlen <- ""
myFunction <- function(id){
return(vir_info$length[vir_info$id == id])
}
vir_out$qlen <- sapply(vir_out$qseqid, FUN = myFunction)
vir_out$qcov <- vir_out$length / vir_out$qlen * 100
vir_out <- vir_out %>%
filter(pident > 90) %>%
filter(qcov > 90)
# get taxonomy of filtered results ----------------------------------------
vir_out$subject_tax_id <- accessionToTaxa(vir_out$sseqid, sqlFile = sql_tax_db)
results_taxonomy <- data.table(getTaxonomy(vir_out$subject_tax_id, sqlFile = sql_tax_db))
vir_out$pos <- seq(1, nrow(vir_out))
results_taxonomy$pos <- seq(1, nrow(results_taxonomy))
final_results <- merge(vir_out, results_taxonomy)
# working directory
cwd <- "/home/domi/Documents/promotion/labrotation3/margot/blast_vs_ncbi_genomes/"
setwd(cwd)
sql_tax_db <- "~/Documents/promotion/dbs/accessionTaxa.sql"
blast_columns <- "qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore"
blast_columns <- unlist(str_split(blast_columns, " "))
vir_out <- fread("virion_out.txt")
cell_out <- fread("cellular_out.txt")
names(vir_out) <- blast_columns
names(cell_out) <- blast_columns
vir_info <- fread("transposases/sequence_files/virion/all_virion_contigs_info.tsv")
vir_info <- fread("~/Documents/promotion/labrotation3/margot/transposases/sequence_files/virion/all_virion_contigs_info.tsv")
vir_info <- fread("~/Documents/promotion/labrotation3/margot/transposases/sequence_files/cellular/all_cellular_contigs_info.tsv")
vir_info <- fread("~/Documents/promotion/labrotation3/margot/transposases/sequence_files/virion/all_virion_contigs_info.tsv")
cell_info <- fread("~/Documents/promotion/labrotation3/margot/transposases/sequence_files/cellular/all_cellular_contigs_info.tsv")
View(cell_info)
View(vir_info)
cell_info <- fread("~/Documents/promotion/labrotation3/margot/transposases/sequence_files/cellular/all_cellular_contigs_info.tsv")
View(cell_out)
View(cell_info)
cell_info <- fread("~/Documents/promotion/labrotation3/margot/transposases/sequence_files/cellular/all_cellular_contigs_info.tsv")
View(cell_info)
View(cell_info)
cell_info$id[1]
cell_info$id[3]
View(cell_info)
# add length to blast dt VECTORISED
vir_out$qlen <- vir_info$length[match(vir_out$sseqid, vir_info$id)]
View(vir_out)
# add length to blast dt VECTORISED
vir_out$qlen <- vir_info$length[match(vir_out$qseqid, vir_info$id)]
View(vir_out)
cell_out$qlen <- cell_info$length[match(cell_out$qseqid, cell_info$id)]
vir_out$qcov <- vir_out$length / vir_out$qlen * 100
cell_out$qcov <- cell_out$length / cell_out$qlen * 100
vir_out <- vir_out %>%
filter(pident > 90) %>%
filter(qcov > 90)
cell_out <- cell_out %>%
filter(pident > 90) %>%
filter(qcov > 90)
View(vir_out)
View(cell_out)
unique(vir_out$qseqid)
unique(cell_out$qseqid)
# get taxonomy of filtered results ----------------------------------------
vir_out$stax_id <- accessionToTaxa(vir_out$sseqid)
# get taxonomy of filtered results ----------------------------------------
vir_out$stax_id <- accessionToTaxa(vir_out$sseqid, sqlFile = sql_tax_db)
sql_tax_db <- "~/Documents/promotion/dbs/taxonomizr/accessionTaxa.sql"
# get taxonomy of filtered results ----------------------------------------
vir_out$stax_id <- accessionToTaxa(vir_out$sseqid, sqlFile = sql_tax_db)
cell_out$stax_id <- accessionToTaxa(cell_out$sseqid, sqlFile = sql_tax_db)
vir_out$stax <- getTaxonomy(vir_out$stax_id, sqlFile = sql_tax_db)
View(vir_out)
getTaxonomy(vir_out$stax_id, sqlFile = sql_tax_db)
vir_out_tax <- getTaxonomy(vir_out$stax_id, sqlFile = sql_tax_db)
cell_out_tax <- getTaxonomy(cell_out$stax_id, sqlFile = sql_tax_db)
cell_out_tax <- data.frame(getTaxonomy(cell_out$stax_id, sqlFile = sql_tax_db))
vir_out_tax <- data.frame(getTaxonomy(vir_out$stax_id, sqlFile = sql_tax_db))
View(vir_out_tax)
View(cell_out_tax)
View(vir_out)
View(cell_out)
# title: analysing COGs
# author: domi
# date: Tue Sep  8 09:35:55 2020
# libraries ---------------------------------------------------------------
library(dplyr)
library(data.table)
library(stringr)
library(seqinr)
library(ggplot2)
# working directory
cwd <- "~/Documents/promotion/labrotation3/margot/COGs/"
setwd(cwd)
# import data -------------------------------------------------------------
df <- fread("out1.txt.emapper.annotations")
cog_translation <- fread("COG_translation_list.csv", header = FALSE)
df$COG_cat_translation <- cog_translation$V2[match(df$`COG cat`, cog_translation$V1)]
df$COG_cat_translation[is.na(df$COG_cat_translation)] <- "NA"
df %>%
filter(COG_cat_translation != "NA") %>%
filter(COG_cat_translation != "Function Unknown") %>%
ggplot(aes(x = COG_cat_translation)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
View(cog_translation)
View(df)
df %>%
ggplot(aes(x = `eggNOG annot`)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
View(df)
table(df$`eggNOG annot`)
df$`eggNOG annot`[1]
df$`eggNOG annot`[2]
df$`eggNOG annot`[3]
df$`eggNOG annot`[4]
df$`eggNOG annot`[4:10]
# title: analysing COGs
# author: domi
# date: Tue Sep  8 09:35:55 2020
# libraries ---------------------------------------------------------------
library(dplyr)
library(data.table)
library(stringr)
library(seqinr)
library(ggplot2)
# working directory
cwd <- "~/Documents/promotion/labrotation3/margot/COGs/"
setwd(cwd)
out1 <- fread("out1.txt.emapper.annotations")
out2 <- fread("out2.txt.emapper.annotations")
cog_translation <- fread("COG_translation_list.csv", header = FALSE)
out1$COG_cat_translation <- cog_translation$V2[match(out1$`COG cat`, cog_translation$V1)]
out1$COG_cat_translation[is.na(out1$COG_cat_translation)] <- "NA"
View(out1)
out2$COG_cat_translation <- cog_translation$V2[match(out2$`COG cat`, cog_translation$V1)]
out2$COG_cat_translation[is.na(out2$COG_cat_translation)] <- "NA"
out1 %>%
filter(COG_cat_translation != "NA") %>%
filter(COG_cat_translation != "Function Unknown") %>%
ggplot(aes(x = COG_cat_translation)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
out2 %>%
filter(COG_cat_translation != "NA") %>%
filter(COG_cat_translation != "Function Unknown") %>%
ggplot(aes(x = COG_cat_translation)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
out1 %>%
filter(COG_cat_translation != "NA") %>%
filter(COG_cat_translation != "Function Unknown") %>%
ggplot(aes(x = COG_cat_translation)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
out2 %>%
filter(COG_cat_translation != "NA") %>%
filter(COG_cat_translation != "Function Unknown") %>%
ggplot(aes(x = COG_cat_translation)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
View(out2)
out1$COG_cat_translation <- cog_translation$V2[match(out1$`COG cat`, cog_translation$V1)]
out1$COG_cat_translation[is.na(out1$COG_cat_translation)] <- "NA"
out2$COG_cat_translation <- cog_translation$V2[match(out2$`COG cat`, cog_translation$V1)]
View(out2)
out1 <- fread("out1.txt.emapper.annotations")
out2 <- fread("out2.txt.emapper.annotations")
out1 <- fread("out1.txt.emapper.annotations")
out2 <- fread("out2.txt.emapper.annotations")
View(out2)
table(out1$`COG cat`)
table(out1$`COG cat`)
table(out2$`COG Functional cat.`)
# title: analysing COGs
# author: domi
# date: Tue Sep  8 09:35:55 2020
# libraries ---------------------------------------------------------------
library(dplyr)
library(data.table)
library(stringr)
library(seqinr)
library(ggplot2)
library(tidyr)
library(patchwork)
# working directory
cwd <- "~/Documents/promotion/labrotation3/margot/COGs/"
setwd(cwd)
# title: analysing COGs
# author: domi
# date: Tue Sep  8 09:35:55 2020
# libraries ---------------------------------------------------------------
library(dplyr)
library(data.table)
library(stringr)
library(seqinr)
library(ggplot2)
library(tidyr)
library(patchwork)
# working directory
cwd <- "~/Documents/promotion/labrotation3/margot/COGs/"
setwd(cwd)
# import data -------------------------------------------------------------
out1 <- fread("out1.txt.emapper.annotations")
out2 <- fread("out2.txt.emapper.annotations")
cog_translation <- fread("COG_translation_list.csv", header = FALSE)
extra_cat <- data.table(V1 = "",
V2 = "not assigned")
cog_translation <- rbind(cog_translation, extra_cat)
t <- fread("test_tail_protein_set.emapper.annotations")
View(t)
View(t)
# libraries ---------------------------------------------------------------
library(dplyr)
library(data.table)
library(stringr)
library(seqinr)
library(ggplot2)
library(tidyr)
library(patchwork)
# working directory
cwd <- "~/Documents/promotion/labrotation3/margot/COGs/"
setwd(cwd)
# import data -------------------------------------------------------------
out1 <- fread("out1.txt.emapper.annotations")
out2 <- fread("out2.txt.emapper.annotations")
cog_translation <- fread("COG_translation_list.csv", header = FALSE)
extra_cat <- data.table(V1 = "",
V2 = "not assigned")
cog_translation <- rbind(cog_translation, extra_cat)
View(cog_translation)
View(extra_cat)
View(out1)
df <- data.table(cog_cat = cog_translation$V1,
cog_translation = cog_translation$V2,
virion_abundance = 0,
cellular_abundance = 0,
virion_rel_abundance = 0,
cellular_rel_abundance = 0,
v_minus_c_delta = 0)
for(i in 1:nrow(df)){
current_cat = df$cog_cat[i]
df$virion_abundance[i] <- out1 %>%
filter(str_detect(`COG Functional cat.`, current_cat)) %>%
nrow()
df$cellular_abundance[i] <- out2 %>%
filter(str_detect(`COG Functional cat.`, current_cat)) %>%
nrow()
if(current_cat == ""){
df$virion_abundance[i] <- out1 %>%
filter(stringi::stri_isempty(`COG Functional cat.`)) %>%
nrow()
df$cellular_abundance[i] <- out2 %>%
filter(stringi::stri_isempty(`COG Functional cat.`)) %>%
nrow()
}
}
rm(i, current_cat)
df$virion_rel_abundance <- df$virion_abundance / nrow(out1)
df$cellular_rel_abundance <- df$cellular_abundance / nrow(out2)
df$v_minus_c_delta <- df$virion_rel_abundance - df$cellular_rel_abundance
View(df)
View(df)
plot_delta <- df %>%
ggplot(aes(x = df$cog_translation, y = v_minus_c_delta*100)) +
geom_bar(stat = "identity") +
theme(axis.text.x =element_blank(),
axis.title.x=element_blank())
plot_comp <- df %>%
gather(key = "type", "rel_abundance", virion_rel_abundance, cellular_rel_abundance) %>%
ggplot(aes(x = cog_translation, y = rel_abundance, fill = type)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.8) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
plot_comp
View(out1)
View(df)
View(df)
sum(df$virion_abundance)
sum(df$cellular_abundance)
View(out1)
setwd(cwd)
# title:
# author: domi
# date: Tue Jan 26 14:43:51 2021
# libraries ---------------------------------------------------------------
library(dplyr)
library(data.table)
library(stringr)
library(seqinr)
library(ggplot2)
# working directory
cwd <- getwd()
getwd()
# working directory
cwd <- "~/Documents/promotion/mvome_pipeline/pure/pure/scripts/"
setwd(cwd)
# title:
# author: domi
# date: Thu Aug 27 14:52:19 2020
# libraries ---------------------------------------------------------------
library(ggplot2)
library(dplyr)
library(data.table)
library(stringr)
library(patchwork)
library(ggthemes)
library(ggridges)
library(tidyr)
setwd("/home/domi/Documents/promotion/labrotation3/margot")
# read data ---------------------------------------------------------------
tax_virion_DF <- fread("summarized_taxonomy.csv")
tax_cellular_DF <- fread("summarized_taxonomy_cellular.csv")
# drop columns
tax_cellular_DF <- tax_cellular_DF %>%
select(-cat_out)
tax_virion_DF %>%  tax_virion_DF %>%
select(-contig_name)
# assign origin -----------------------------------------------------------
tax_virion_DF$origin <- if_else(tax_virion_DF$our_cat == "MVome",
true = "MVome", false = "Virome")
tax_cellular_DF$origin <- "Cellular"
# combine dfs -------------------------------------------------------------
tax_virion_DF <- tax_virion_DF %>%
select(-contig_name) %>%
select(-our_cat)
tax_DF <- rbind(tax_virion_DF, tax_cellular_DF)
rm(tax_cellular_DF, tax_virion_DF)
# length plots ------------------------------------------------------------
tax_DF %>%
ggplot(aes(x = origin, y = length, fill = origin))+
geom_boxplot() +
ylim(c(5000,30000)) +
ggtitle("contig lengths") +
theme_fivethirtyeight()
# transposon frequencies --------------------------------------------------
# read in blast output
blast_out <- fread("transposases/blast_results/combined_contigs_against_trep_db.csv")
blast_out <- blast_out %>%
filter(V11 < 0.00001)
blast_out$id <- str_replace(blast_out$V1, pattern = "_length.*", "")
tax_DF$transposons <- 0
for(id in unique(blast_out$id)){
tax_DF$transposons[tax_DF$id == id] <- length(unique(blast_out$V7[blast_out$id == id]))
}
rm(blast_out)
# tax_DF %>%
#     ggplot(aes(x = transposons, fill = origin)) +
#     geom_histogram(alpha = 0.6, position = "dodge") +
#     theme_fivethirtyeight() +
#     ylim(c(0, 25))
# maybe simplest of barcharts:
simple_df <- data.table(origin = unique(tax_DF$origin),
contigs = 0,
transposons = 0,
transp_per_contig = 0)
for(i in 1:nrow(simple_df)){
current_origin <- simple_df$origin[i]
simple_df$contigs[i] <- tax_DF %>%
filter(origin == current_origin) %>%
nrow()
simple_df$transposons[i] <- tax_DF %>%
filter(origin == current_origin) %>%
select(transposons) %>%
sum()
}
simple_df$transp_per_contig <- simple_df$transposons / simple_df$contigs
simple_df %>%
ggplot(aes(x = origin, y = transp_per_contig)) +
geom_bar(stat = "identity", fill = "darkgrey", color = "black") +
ggtitle("transposons per contig") +
theme_fivethirtyeight()
# taxonomy data again! ----------------------------------------------------
# prettify the taxonomy columns
tax_DF$superkingdom[tax_DF$superkingdom == ""] <- "not classified"
tax_DF$phylum[tax_DF$phylum == ""] <- "not classified"
tax_DF$order[tax_DF$order == ""] <- "not classified"
tax_DF$class[tax_DF$class == ""] <- "not classified"
tax_DF$family[tax_DF$family == ""] <- "not classified"
tax_DF$genus[tax_DF$genus == ""] <- "not classified"
tax_DF$species[tax_DF$species == ""] <- "not classified"
tax_DF$superkingdom[is.na(tax_DF$superkingdom)] <- "not classified"
tax_DF$phylum[is.na(tax_DF$phylum)] <- "not classified"
tax_DF$order[is.na(tax_DF$order)] <- "not classified"
tax_DF$class[is.na(tax_DF$class)] <- "not classified"
tax_DF$family[is.na(tax_DF$family)] <- "not classified"
tax_DF$genus[is.na(tax_DF$genus)] <- "not classified"
tax_DF$species[is.na(tax_DF$species)] <- "not classified"
# WE CAN IMPROVE THIS, ask someone!
a <- tax_DF %>%
filter(origin == "MVome") %>%
group_by(phylum) %>%
summarise(count = n())
a$origin <- "MVome"
a$perc <- a$count/sum(a$count)*100
b <- tax_DF %>%
filter(origin == "Virome") %>%
group_by(phylum) %>%
summarise(count = n())
b$origin <- "Virome"
b$perc <- b$count/sum(b$count)*100
c <- tax_DF %>%
filter(origin == "Cellular") %>%
group_by(phylum) %>%
summarise(count = n())
c$origin <- "Cellular"
c$perc <- c$count/sum(c$count)*100
info_DF <- rbind(a, b, c)
rm(a, b, c)
# taxonomy plots ----------------------------------------------------------
info_DF %>%
filter(perc > 1) %>%
ggplot(aes(fill = phylum, x = origin, y = perc)) +
geom_bar(position = "stack", stat = "identity", color = "black", alpha = 0.9) +
ggtitle("taxonomy plot: phylum level") +
theme_fivethirtyeight()
# libraries ---------------------------------------------------------------
library(dplyr)
library(data.table)
library(stringr)
library(seqinr)
library(ggplot2)
# working directory
cwd <- "~/Documents/promotion/mvome_pipeline/pure/pure/scripts/"
setwd(cwd)
args = commandArgs(trailingOnly = TRUE)
args = commandArgs(trailingOnly = TRUE)
args = "~/Documents/promotion/mvome_pipeline/test_pure/o6"
# while developing
args = c("~/Documents/promotion/mvome_pipeline/test_pure/o6")
outdir <- args[1]
outdir <- args[1]
file.path(outdir, "virome/deepvirfinder")
dvf_file <- file.path(outdir, "virome/deepvirfinder")
dvf_file <- file.path(outdir, "virome/deepvirfinder/contigs_final.fasta_gt1bp_dvfpred.txt")
vs_file <- file.path(outdir, "virome/virsorter/final-viral-score.tsv")
dvf_file <- file.path(outdir, "virome/deepvirfinder/contigs_final.fasta_gt1bp_dvfpred.txt")
marvel_file <- file.path(outdir, "log/marvel.log")
palsflow_file_1 <- file.path(outdir, "plasmidome/plasflow/plasflow_out.tsv")
# title:
# author: domi
# date: Tue Jan 26 14:43:51 2021
# libraries ---------------------------------------------------------------
library(dplyr)
library(data.table)
library(stringr)
library(seqinr)
library(ggplot2)
# working directory
cwd <- "~/Documents/promotion/mvome_pipeline/pure/pure/scripts/"
setwd(cwd)
# get ouput directory ---------------------------------------------------------
args = commandArgs(trailingOnly = TRUE)
# while developing
args <- c("~/Documents/promotion/mvome_pipeline/test_pure/o6/")
outdir <- args[1]
# input files -------------------------------------------------------------
dvf_file <- file.path(outdir, "virome/deepvirfinder/contigs_final.fasta_gt1bp_dvfpred.txt")
vs_file <- file.path(outdir, "virome/virsorter/final-viral-score.tsv")
marvel_file <- file.path(outdir, "log/marvel.log")
plasflow_file_1 <- file.path(outdir, "plasmidome/plasflow/plasflow_out.tsv")
dvf_dt <- fread(dvf_file)
vs_dt <- fread(vs_file)
View(vs_dt)
View(dvf_dt)
marvel_file
